<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="laser_visual"  default="false"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="imu_visual"    default="false"/>


  <xacro:macro name="omni_steering" params="">
  <gazebo reference="base_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2> 
    <kp>1e+13</kp>
    <kd>1.0</kd>
    <material>Gazebo/White</material>
  </gazebo>
  
  <gazebo>
    <plugin name="$custom_controller" filename="libcustom_control_plugin.so">
        <commandTopic>/mecanum_vel</commandTopic>
        <odometryTopic>/odom</odometryTopic>
        <odometryFrame>/odom</odometryFrame>
        <odometryRate>20.0</odometryRate>
        <robotBaseFrame>/mecanum/base_link</robotBaseFrame>
    </plugin>
</gazebo>

  
  </xacro:macro>
  
  <xacro:macro name="sensor_gazebo" params="">

    <gazebo reference="imu_link">
      <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <visualize>false</visualize>
      </sensor>
      <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
        <alwaysOn>true</alwaysOn>
        <bodyName>imu_link</bodyName>
        <frameName>imu_link</frameName>
        <topicName>imu</topicName>
        <serviceName>imu_service</serviceName>
        <gaussianNoise>0.0</gaussianNoise>
        <updateRate>0</updateRate>
        <imu>
          <noise>
            <type>gaussian</type>
            <rate>
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </rate>
            <accel>
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </accel>
          </noise>
        </imu>
      </plugin>
    </gazebo>


    <gazebo reference="velodyne">
      <sensor type="gpu_ray" name="velodyne-VLP16">      <!-- ray   -->   <!-- gpu_ray -->
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>440</samples>
              <resolution>1</resolution>
              <min_angle>-3.14</min_angle>
              <max_angle>3.14</max_angle>
            </horizontal>
            <vertical>
              <samples>16</samples>
              <resolution>1</resolution>
              <min_angle>-0.26</min_angle>   <!-- 15 -->
              <max_angle> 0.26</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.3</min>
            <max>131</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">     <!-- libgazebo_ros_velodyne_gpu_laser  --> <!-- libgazebo_ros_velodyne_laser  -->
          <topicName>/velodyne_points</topicName>
          <frameName>velodyne</frameName>
          <organize_cloud>false</organize_cloud>
          <min_range>0.9</min_range>
          <max_range>130.0</max_range>
          <gaussianNoise>0.008</gaussianNoise>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro> 


</robot>
